#!/usr/bin/env bash

# This script does a deep rebuild of the Silver compiler, which should be done
# when there are changes to the translation.

set -eu

export SILVER_HOME=$(pwd)

# just run this script, no parameters or options.

trap 'echo -e "\a"' EXIT

mkdir -p build

if [ -d generated/bin/common ]; then
 # oh man, let's make sure stale runtimes aren't causing us serious problems here
 rm -rf generated/bin/common
fi

# Modifications may have been made to how the translation is done

echo "First pass, no need to be clean ..."
echo ""
echo " > Pass 1"
echo "   Pass 2"
echo "   Pass 3"
echo ""

(
# Don't build core or the runtime, in case there are changes to the translation that are reflected there.
export NORUNTIME=1
cp jars/silver.core.jar build/

# Doesn't need to be clean, since we are starting with a known good state of generated/
time ./make-compiler
)

echo "One full cycle ..."
echo ""
echo "   Pass 1"
echo " > Pass 2"
echo "   Pass 3"
echo ""

# Clean out stale generated files from the last pass
rm -rf generated/*/

# Build, and recompile the runtime now
time ./make-compiler

# Finally, we should have a fully working binary on all the new code. Run it again to reach a fixed point:

echo "One more full cycle ..."
echo ""
echo "   Pass 1"
echo "   Pass 2"
echo " > Pass 3"
echo ""

# Clean out stale generated files from the last pass
rm -rf generated/*/

time ./make-compiler

echo "Cleaning out stale runtime class files..."
rm -rf generated/bin/common

echo "deep-rebuild success"
